<Definitions>
  <Application id="tt">
    <Schemas>
      <Schema id="stream_voice_call" name="stream_voice_call">
        <attribute name="callingnumber" type="java.lang.String"/>
        <attribute name="callednumber" type="java.lang.String"/>
        <attribute name="inittime" type="java.lang.Long"/>
      </Schema>
      <Schema id="filter_voice1" name="filter_voice1">
        <attribute name="callingnumber" type="java.lang.String"/>
      </Schema>
      <Schema id="filter_voice2" name="filter_voice2">
        <attribute name="callingnumber" type="java.lang.String"/>
        <attribute name="callednumer" type="java.lang.String"/>
      </Schema>
      <Schema id="filter_voice3" name="filter_voice3">
        <attribute name="callingnumber" type="java.lang.String"/>
        <attribute name="callednumer" type="java.lang.String"/>
        <attribute name="inittime" type="java.lang.Long"/>
      </Schema>
      <Schema id="sub_001" name="sub_001">
        <attribute name="callingnumber" type="java.lang.String"/>
        <attribute name="callednumber" type="java.lang.String"/>
        <attribute name="inittime" type="java.lang.Long"/>
      </Schema>
      <Schema id="filter_voice1_1" name="filter_voice1_1">
        <attribute name="callingnumber" type="java.lang.String"/>
      </Schema>
    </Schemas>
    <Operators>
      <RandomGenInput id="RandomGen_001" parallel="1">
        <deserializer class="SimpleSerDe"/>
        <timeUnit>SECONDS</timeUnit>
        <period>1</period>
        <eventNumPerPeriod>1</eventNumPerPeriod>
        <isSchedule>true</isSchedule>
      </RandomGenInput>
      <ConsoleOutput id="ConsoleOutput_002" parallel="1">
        <serializer class="SimpleSerDe"/>
      </ConsoleOutput>
      <ConsoleOutput id="ConsoleOutput_003" parallel="1">
        <serializer class="SimpleSerDe"/>
      </ConsoleOutput>
      <ConsoleOutput id="ConsoleOutput_004" parallel="1">
        <serializer class="SimpleSerDe"/>
      </ConsoleOutput>
      <Functor id="Functor_008" parallel="1">
        <outputExpression>stream_voice_call.callingnumber, stream_voice_call.callednumber, stream_voice_call.inittime</outputExpression>
        <filterExpression>(stream_voice_call.callingnumber != &apos;10086&apos;)</filterExpression>
      </Functor>
      <Splitter id="Splitter_010" parallel="1">
        <subSplitters>
          <SubSplitter>
            <streamName>st_003</streamName>
            <outputExpression>sub_001.callingnumber</outputExpression>
          </SubSplitter>
          <SubSplitter>
            <streamName>st_008</streamName>
            <outputExpression>sub_001.callingnumber, sub_001.callednumber</outputExpression>
          </SubSplitter>
          <SubSplitter>
            <streamName>st_009</streamName>
            <outputExpression>sub_001.callingnumber, sub_001.callednumber, sub_001.inittime</outputExpression>
          </SubSplitter>
        </subSplitters>
      </Splitter>
      <Functor id="Functor_012" parallel="1">
        <outputExpression>filter_voice1_1.callingnumber</outputExpression>
      </Functor>
    </Operators>
    <Transitions>
      <Transition name="st_001" from="RandomGen_001" to="Functor_008" distributedType="SHUFFLE" schemaName="stream_voice_call"/>
      <Transition name="st_002" from="Functor_008" to="Splitter_010" distributedType="SHUFFLE" schemaName="sub_001"/>
      <Transition name="st_008" from="Splitter_010" to="ConsoleOutput_003" distributedType="SHUFFLE" schemaName="filter_voice2"/>
      <Transition name="st_009" from="Splitter_010" to="ConsoleOutput_004" distributedType="SHUFFLE" schemaName="filter_voice3"/>
      <Transition name="st_003" from="Splitter_010" to="Functor_012" distributedType="SHUFFLE" schemaName="filter_voice1_1"/>
      <Transition name="st_011" from="Functor_012" to="ConsoleOutput_002" distributedType="SHUFFLE" schemaName="filter_voice1"/>
    </Transitions>
  </Application>
</Definitions>