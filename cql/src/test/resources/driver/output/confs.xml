<Definitions>
  <Application id="confs">
    <confs>
      <property key="a" value="1"/>
      <property key="b" value="1.0"/>
      <property key="c" value="1.0"/>
      <property key="operator.kafka.brokers" value="192.168.0.2:9092"/>
      <property key="operator.kafka.messageserializerclass" value="kafka.serializer.StringEncoder"/>
      <property key="operator.kafka.zksessiontimeout" value="20000"/>
      <property key="operator.kafka.zksynctime" value="20000"/>
      <property key="operator.kafka.zookeepers" value="localhost:2181,192.168.0.2:2181"/>
      <property key="serde.simpleserde.separator" value=","/>
      <property key="x" value="true"/>
    </confs>
    <Schemas>
      <Schema id="s" name="s">
        <attribute name="id" type="java.lang.Integer"/>
        <attribute name="name" type="java.lang.String"/>
        <attribute name="type" type="java.lang.Integer"/>
      </Schema>
      <Schema id="rs" name="rs">
        <attribute name="id" type="java.lang.String"/>
        <attribute name="name" type="java.lang.String"/>
        <attribute name="type" type="java.lang.Integer"/>
        <attribute name="cc" type="java.lang.Integer"/>
      </Schema>
    </Schemas>
    <Operators>
      <KafkaInput id="KafkaInput_001" parallel="1">
        <deserializer class="SimpleSerDe"/>
        <groupId>gidkpi_1_1</groupId>
        <topic>agg_1_1</topic>
      </KafkaInput>
      <KafkaOutput id="KafkaOutput_002" parallel="1">
        <serializer class="SimpleSerDe"/>
        <topic>agg_1_2</topic>
      </KafkaOutput>
      <Aggregator id="Aggregator_004" parallel="1">
        <outputExpression>s.id, s.name, s.type,  count( s.id ) </outputExpression>
        <groupbyExpression>s.type</groupbyExpression>
        <window name="time_batch">
          <length>20000</length>
          <excludeNow>false</excludeNow>
        </window>
        <filterBeforeAggregate>(s.id &gt; 5)</filterBeforeAggregate>
      </Aggregator>
    </Operators>
    <Transitions>
      <Transition name="st_001" from="KafkaInput_001" to="Aggregator_004" distributedType="FIELDS" distributedFields="s.type" schemaName="s"/>
      <Transition name="st_003" from="Aggregator_004" to="KafkaOutput_002" distributedType="SHUFFLE" schemaName="rs"/>
    </Transitions>
  </Application>
</Definitions>