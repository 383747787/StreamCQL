<Definitions>
  <Application id="prm">
    <confs>
      <property key="operator.kafka.brokers" value="192.168.0.2:9092"/>
      <property key="operator.kafka.messageserializerclass" value="kafka.serializer.StringEncoder"/>
      <property key="operator.kafka.zksessiontimeout" value="20000"/>
      <property key="operator.kafka.zksynctime" value="20000"/>
      <property key="operator.kafka.zookeepers" value="192.168.0.2:2181"/>
      <property key="serde.simpleserde.separator" value=","/>
    </confs>
    <Schemas>
      <Schema id="transaction" name="transaction">
        <attribute name="seq_no" type="java.lang.Long"/>
        <attribute name="sm_user_id" type="java.lang.String"/>
        <attribute name="dd_apdate" type="java.lang.Long"/>
        <attribute name="sd_seq_num" type="java.lang.String"/>
        <attribute name="sd_key" type="java.lang.String"/>
        <attribute name="sd_retl_id" type="java.lang.String"/>
        <attribute name="sd_term_id" type="java.lang.String"/>
        <attribute name="mgroup_id" type="java.lang.String"/>
        <attribute name="sd_term_name_loc" type="java.lang.String"/>
        <attribute name="sd_acq_inst_id_num" type="java.lang.String"/>
        <attribute name="sd_term_cntry" type="java.lang.String"/>
        <attribute name="sd_term_st" type="java.lang.String"/>
        <attribute name="sd_term_city" type="java.lang.String"/>
        <attribute name="sd_retl_sic_cde" type="java.lang.String"/>
        <attribute name="md_tran_amt1" type="java.lang.Double"/>
        <attribute name="md_tran_amt3" type="java.lang.Double"/>
        <attribute name="sd_orig_crncy_cde" type="java.lang.String"/>
        <attribute name="md_tran_amt2" type="java.lang.Double"/>
        <attribute name="dd_tran_dat_tim" type="java.lang.Long"/>
        <attribute name="dd_tran_dat" type="java.lang.String"/>
        <attribute name="dd_tran_tim" type="java.lang.String"/>
        <attribute name="sd_pin_ind" type="java.lang.String"/>
        <attribute name="sd_pin_tries" type="java.lang.String"/>
        <attribute name="sd_tran_typ" type="java.lang.String"/>
        <attribute name="sd_tran_cde" type="java.lang.String"/>
        <attribute name="sd_resp_cde" type="java.lang.String"/>
        <attribute name="sd_msg_typ" type="java.lang.String"/>
        <attribute name="sd_filler_field" type="java.lang.String"/>
        <attribute name="sd_auth_dat" type="java.lang.String"/>
        <attribute name="sd_auth_tim" type="java.lang.String"/>
        <attribute name="sd_pt_srv_entry_mde" type="java.lang.String"/>
        <attribute name="sd_tran_media" type="java.lang.String"/>
        <attribute name="sd_apprv_cde" type="java.lang.String"/>
        <attribute name="sd_pt_srv_cond_cde" type="java.lang.String"/>
        <attribute name="term_entry_capa" type="java.lang.String"/>
        <attribute name="term_verif_rsut" type="java.lang.String"/>
        <attribute name="term_capabit" type="java.lang.String"/>
        <attribute name="cadhld_verif_meth_rsut" type="java.lang.String"/>
        <attribute name="tran_channel_type" type="java.lang.String"/>
        <attribute name="issu_script_rsut" type="java.lang.String"/>
        <attribute name="chip_cond_cde" type="java.lang.String"/>
        <attribute name="sm_user_mob_phn" type="java.lang.String"/>
        <attribute name="sm_user_mob_phn1" type="java.lang.String"/>
        <attribute name="sm_user_pri_govt_id" type="java.lang.String"/>
        <attribute name="sm_user_postal_cde" type="java.lang.String"/>
        <attribute name="sm_exp_dat" type="java.lang.String"/>
        <attribute name="sm_crd_blk_cde" type="java.lang.String"/>
        <attribute name="mm_open_to_buy" type="java.lang.Double"/>
        <attribute name="score" type="java.lang.Integer"/>
        <attribute name="object_no" type="java.lang.String"/>
        <attribute name="object_level" type="java.lang.String"/>
        <attribute name="is_ice" type="java.lang.String"/>
        <attribute name="is_watch" type="java.lang.String"/>
        <attribute name="is_mark" type="java.lang.String"/>
        <attribute name="fraud_type" type="java.lang.String"/>
        <attribute name="fraud_date" type="java.lang.Long"/>
        <attribute name="rule_count" type="java.lang.Integer"/>
        <attribute name="sd_ip_addr" type="java.lang.String"/>
        <attribute name="sd_mac_addr" type="java.lang.String"/>
        <attribute name="sd_accept_outsid_void_cck" type="java.lang.String"/>
        <attribute name="sd_auth_src" type="java.lang.String"/>
        <attribute name="sd_cup_coun" type="java.lang.Integer"/>
        <attribute name="sd_cvd_present_flg" type="java.lang.String"/>
        <attribute name="e_cash_balance" type="java.lang.Double"/>
        <attribute name="sd_e_com_flg" type="java.lang.String"/>
        <attribute name="interact_flag" type="java.lang.String"/>
        <attribute name="tran_launch_way" type="java.lang.String"/>
        <attribute name="sd_acct_num" type="java.lang.String"/>
      </Schema>
      <Schema id="realresult" name="realresult">
        <attribute name="seq_no" type="java.lang.Long"/>
        <attribute name="dd_tran_tim" type="java.lang.String"/>
        <attribute name="sd_key" type="java.lang.String"/>
        <attribute name="real_card_m20_scont" type="java.lang.Long"/>
        <attribute name="real_card_m20_samt" type="java.lang.Double"/>
        <attribute name="real_card_m20_cont" type="java.lang.Long"/>
        <attribute name="real_card_m20_amt" type="java.lang.Double"/>
        <attribute name="real_card_m20_avgamt" type="java.lang.Double"/>
        <attribute name="real_card_m20_maxamt" type="java.lang.Double"/>
        <attribute name="real_card_m20_minamt" type="java.lang.Double"/>
      </Schema>
      <Schema id="real_cardm20" name="real_cardm20">
        <attribute name="seq_no" type="java.lang.Long"/>
        <attribute name="dd_tran_tim" type="java.lang.String"/>
        <attribute name="sd_key" type="java.lang.String"/>
        <attribute name="real_card_m20_scont" type="java.lang.Long"/>
        <attribute name="real_card_m20_samt" type="java.lang.Double"/>
        <attribute name="real_card_m20_cont" type="java.lang.Long"/>
        <attribute name="real_card_m20_amt" type="java.lang.Double"/>
        <attribute name="real_card_m20_avgamt" type="java.lang.Double"/>
        <attribute name="real_card_m20_maxamt" type="java.lang.Double"/>
        <attribute name="real_card_m20_minamt" type="java.lang.Double"/>
      </Schema>
    </Schemas>
    <Operators>
      <KafkaInput id="KafkaInput_001" parallel="1">
        <deserializer class="SimpleSerDe"/>
        <groupId>trans_1</groupId>
        <topic>trans</topic>
      </KafkaInput>
      <KafkaOutput id="KafkaOutput_002" parallel="1">
        <serializer class="SimpleSerDe"/>
        <topic>real</topic>
      </KafkaOutput>
      <Aggregator id="Aggregator_005" parallel="1">
        <outputExpression>transaction.seq_no, transaction.dd_tran_tim, transaction.sd_key,  count( 1 ,( transaction.sd_resp_cde in ( &apos;001&apos;,&apos;000&apos; )  and  transaction.sd_filler_field in ( &apos;000&apos;,&apos;0000&apos; ) ) ) , case when  sum( transaction.md_tran_amt1 ,( transaction.sd_resp_cde in ( &apos;001&apos;,&apos;000&apos; )  and  transaction.sd_filler_field in ( &apos;000&apos;,&apos;0000&apos; ) ) )  is null then 2000 else  sum( transaction.md_tran_amt1 ,( transaction.sd_resp_cde in ( &apos;001&apos;,&apos;000&apos; )  and  transaction.sd_filler_field in ( &apos;000&apos;,&apos;0000&apos; ) ) )  end ,  count( 1 ,((transaction.sd_tran_cde = &apos;10&apos;) and (transaction.sd_pt_srv_entry_mde like &apos;90%&apos; and ((transaction.sd_term_cntry = &apos;CN&apos;) and ((transaction.sd_tran_typ != &apos;7&apos;) and ((transaction.sd_msg_typ = &apos;0210&apos;) and ( transaction.sd_resp_cde in ( &apos;001&apos;,&apos;000&apos; )  and  transaction.sd_filler_field in ( &apos;000&apos;,&apos;0000&apos; ) )))))) ) ,  sum( transaction.md_tran_amt1 ,((transaction.sd_tran_cde = &apos;10&apos;) and (transaction.sd_pt_srv_entry_mde like &apos;90%&apos; and ((transaction.sd_term_cntry = &apos;CN&apos;) and ((transaction.sd_tran_typ != &apos;7&apos;) and ((transaction.sd_msg_typ = &apos;0210&apos;) and ( transaction.sd_resp_cde in ( &apos;001&apos;,&apos;000&apos; )  and  transaction.sd_filler_field in ( &apos;000&apos;,&apos;0000&apos; ) )))))) ) , case when  avg( transaction.md_tran_amt1 ,( transaction.sd_resp_cde in ( &apos;001&apos;,&apos;000&apos; )  and  transaction.sd_filler_field in ( &apos;000&apos;,&apos;0000&apos; ) ) )  is null then 2000 else  avg( transaction.md_tran_amt1 ,( transaction.sd_resp_cde in ( &apos;001&apos;,&apos;000&apos; )  and  transaction.sd_filler_field in ( &apos;000&apos;,&apos;0000&apos; ) ) )  end ,  max( transaction.md_tran_amt1 ,( transaction.sd_resp_cde in ( &apos;001&apos;,&apos;000&apos; )  and  transaction.sd_filler_field in ( &apos;000&apos;,&apos;0000&apos; ) ) ) ,  min( transaction.md_tran_amt1 ,( transaction.sd_resp_cde in ( &apos;001&apos;,&apos;000&apos; )  and  transaction.sd_filler_field in ( &apos;000&apos;,&apos;0000&apos; ) ) ) </outputExpression>
        <groupbyExpression>transaction.sd_key</groupbyExpression>
        <window name="group_event_tslide">
          <length>1200000</length>
          <groupbyExpression>transaction.sd_key</groupbyExpression>
          <timestampField>transaction.dd_tran_dat_tim</timestampField>
          <excludeNow>false</excludeNow>
        </window>
      </Aggregator>
      <Combiner id="Combiner_006" parallel="1">
        <outputExpression>transaction.seq_no, transaction.dd_tran_tim, transaction.sd_key, real_cardm20.real_card_m20_scont, real_cardm20.real_card_m20_samt, real_cardm20.real_card_m20_cont, real_cardm20.real_card_m20_amt, real_cardm20.real_card_m20_avgamt, real_cardm20.real_card_m20_maxamt, real_cardm20.real_card_m20_minamt</outputExpression>
        <combineProperties>real_cardm20.seq_no,transaction.seq_no</combineProperties>
        <orderedStreams>transaction,real_cardm20</orderedStreams>
      </Combiner>
    </Operators>
    <Transitions>
      <Transition name="st_001" from="KafkaInput_001" to="Aggregator_005" distributedType="FIELDS" distributedFields="transaction.sd_key" schemaName="transaction"/>
      <Transition name="st_002" from="Aggregator_005" to="Combiner_006" distributedType="FIELDS" distributedFields="real_cardm20.seq_no" schemaName="real_cardm20"/>
      <Transition name="st_001" from="KafkaInput_001" to="Combiner_006" distributedType="FIELDS" distributedFields="transaction.seq_no" schemaName="transaction"/>
      <Transition name="st_008" from="Combiner_006" to="KafkaOutput_002" distributedType="SHUFFLE" schemaName="realresult"/>
    </Transitions>
  </Application>
</Definitions>