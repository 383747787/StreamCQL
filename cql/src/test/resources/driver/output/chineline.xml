<Definitions>
  <Application id="jointest">
    <confs>
      <property key="operator.kafka.brokers" value="158.1.130.12:9092"/>
      <property key="operator.kafka.messageserializerclass" value="kafka.serializer.StringEncoder"/>
      <property key="operator.kafka.zksessiontimeout" value="20000"/>
      <property key="operator.kafka.zksynctime" value="20000"/>
      <property key="operator.kafka.zookeepers" value="158.1.130.12:2181"/>
      <property key="serde.simpleserde.separator" value=","/>
    </confs>
    <Schemas>
      <Schema id="s1" name="s1">
        <attribute name="id" type="java.lang.Integer"/>
        <attribute name="name" type="java.lang.String"/>
        <attribute name="type" type="java.lang.Integer"/>
      </Schema>
      <Schema id="s2" name="s2">
        <attribute name="id" type="java.lang.Integer"/>
        <attribute name="name" type="java.lang.String"/>
        <attribute name="type" type="java.lang.Integer"/>
      </Schema>
      <Schema id="s3" name="s3">
        <attribute name="id" type="java.lang.Integer"/>
        <attribute name="name" type="java.lang.Integer"/>
        <attribute name="type" type="java.lang.Integer"/>
        <attribute name="nullcol" type="java.lang.String"/>
      </Schema>
      <Schema id="s4" name="s4">
        <attribute name="id" type="java.lang.Integer"/>
        <attribute name="name" type="java.lang.String"/>
        <attribute name="type" type="java.lang.Integer"/>
      </Schema>
      <Schema id="rs" name="rs">
        <attribute name="id" type="java.lang.String"/>
        <attribute name="name" type="java.lang.String"/>
        <attribute name="type" type="java.lang.String"/>
        <attribute name="id2" type="java.lang.String"/>
        <attribute name="name2" type="java.lang.String"/>
        <attribute name="type2" type="java.lang.String"/>
        <attribute name="c1" type="java.lang.String"/>
      </Schema>
    </Schemas>
    <Operators>
      <KafkaInput id="KafkaInput_001" parallel="1">
        <deserializer class="SimpleSerDe"/>
        <groupId>chineline_1_1</groupId>
        <topic>join_1</topic>
      </KafkaInput>
      <KafkaInput id="KafkaInput_002" parallel="1">
        <deserializer class="SimpleSerDe"/>
        <groupId>chineline_1_2</groupId>
        <topic>join_2</topic>
      </KafkaInput>
      <KafkaInput id="KafkaInput_004" parallel="1">
        <deserializer class="SimpleSerDe"/>
        <groupId>chineline_1_3</groupId>
        <topic>join_2</topic>
      </KafkaInput>
      <KafkaOutput id="KafkaOutput_005" parallel="1">
        <serializer class="SimpleSerDe"/>
        <topic>chineline_1_4</topic>
      </KafkaOutput>
      <Functor id="Functor_007" parallel="1">
        <outputExpression>s1.id, s1.name, s1.type, null</outputExpression>
      </Functor>
      <Functor id="Functor_009" parallel="1">
        <outputExpression>s2.id, s2.name, s2.type, 1</outputExpression>
      </Functor>
      <Join id="Join_010" parallel="1">
        <outputExpression>s4.id, s4.name, s4.type, s3.id, s3.name, s3.type, s3.nullcol</outputExpression>
        <leftStreamName>st_004</leftStreamName>
        <rightStreamName>st_003</rightStreamName>
        <leftWindow name="time_batch">
          <length>20000</length>
          <excludeNow>false</excludeNow>
        </leftWindow>
        <rightWindow name="keepall">
          <excludeNow>false</excludeNow>
        </rightWindow>
        <joinType>INNER_JOIN</joinType>
        <joinExpression>(s4.id = s3.type)</joinExpression>
        <filterAfterJoinExpression>(s4.id &gt; 5)</filterAfterJoinExpression>
        <uniDirectionIndex>NONE_STREAM</uniDirectionIndex>
      </Join>
      <Union id="Union_013" parallel="1">
        <outputExpression>s3.id,s3.name,s3.type,s3.nullcol</outputExpression>
      </Union>
    </Operators>
    <Transitions>
      <Transition name="st_001" from="KafkaInput_001" to="Functor_007" distributedType="SHUFFLE" schemaName="s1"/>
      <Transition name="st_006" from="Functor_007" to="Union_013" distributedType="SHUFFLE" schemaName="s3"/>
      <Transition name="st_002" from="KafkaInput_002" to="Functor_009" distributedType="SHUFFLE" schemaName="s2"/>
      <Transition name="st_008" from="Functor_009" to="Union_013" distributedType="SHUFFLE" schemaName="s3"/>
      <Transition name="st_003" from="Union_013" to="Join_010" distributedType="FIELDS" distributedFields="type" schemaName="s3"/>
      <Transition name="st_004" from="KafkaInput_004" to="Join_010" distributedType="FIELDS" distributedFields="id" schemaName="s4"/>
      <Transition name="st_011" from="Join_010" to="KafkaOutput_005" distributedType="SHUFFLE" schemaName="rs"/>
    </Transitions>
  </Application>
</Definitions>
